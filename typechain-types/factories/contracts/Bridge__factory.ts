/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Bridge, BridgeInterface } from "../../contracts/Bridge";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Redeem",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "mintTokem",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_burnToken",
        type: "address",
      },
    ],
    name: "excludeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_burnToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mintToken",
        type: "address",
      },
    ],
    name: "includeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_enabled",
        type: "bool",
      },
    ],
    name: "updateChainById",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506110e7806100616000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80638dfd55261461005c57806390fede9714610078578063d3eda40d14610094578063f3810a2e146100b0578063fe029156146100cc575b600080fd5b6100766004803603810190610071919061090a565b6100fc565b005b610092600480360381019061008d9190610a5b565b61020e565b005b6100ae60048036038101906100a991906109a9565b61023d565b005b6100ca60048036038101906100c591906108e1565b61049a565b005b6100e660048036038101906100e19190610946565b6105ac565b6040516100f39190610de0565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461018c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018390610d60565b60405180910390fd5b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b806003600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008888888888604051602001610258959493929190610bf8565b6040516020818303038152906040528051906020012090506002600082815260200190815260200160002060009054906101000a900460ff16156102d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c890610da0565b60405180910390fd5b600060016102de8361080c565b868686604051600081526020016040526040516102fe9493929190610cfb565b6020604051602081039080840390855afa158015610320573d6000803e3d6000fd5b505050602060405103519050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146103bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b390610d40565b60405180910390fd5b8973ffffffffffffffffffffffffffffffffffffffff166340c10f198a8a6040518363ffffffff1660e01b81526004016103f7929190610cd2565b600060405180830381600087803b15801561041157600080fd5b505af1158015610425573d6000803e3d6000fd5b5050505060016002600084815260200190815260200160002060006101000a81548160ff0219169083151502179055507f222838db2794d11532d940e8dec38ae307ed0b63cd97c233322e221f998767a68989604051610486929190610cd2565b60405180910390a150505050505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461052a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052190610d60565b60405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006003600083815260200190815260200160002060009054906101000a900460ff1661060e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060590610dc0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d490610d80565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff16639dc29fac33856040518363ffffffff1660e01b8152600401610718929190610cd2565b600060405180830381600087803b15801561073257600080fd5b505af1158015610746573d6000803e3d6000fd5b50505050600054905060008081548092919061076190610eb4565b91905055507f9734819749a91fc3be03ea83205f924ee08479bd3f0da48efc91d94d050cac1e600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16858585856040516107fc959493929190610c7f565b60405180910390a1949350505050565b6000806040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152509050808360405160200161085a929190610c57565b60405160208183030381529060405280519060200120915050919050565b6000813590506108878161103e565b92915050565b60008135905061089c81611055565b92915050565b6000813590506108b18161106c565b92915050565b6000813590506108c681611083565b92915050565b6000813590506108db8161109a565b92915050565b6000602082840312156108f357600080fd5b600061090184828501610878565b91505092915050565b6000806040838503121561091d57600080fd5b600061092b85828601610878565b925050602061093c85828601610878565b9150509250929050565b6000806000806080858703121561095c57600080fd5b600061096a87828801610878565b945050602061097b87828801610878565b935050604061098c878288016108b7565b925050606061099d878288016108b7565b91505092959194509250565b600080600080600080600080610100898b0312156109c657600080fd5b60006109d48b828c01610878565b98505060206109e58b828c01610878565b97505060406109f68b828c016108b7565b9650506060610a078b828c016108b7565b9550506080610a188b828c016108b7565b94505060a0610a298b828c016108cc565b93505060c0610a3a8b828c016108a2565b92505060e0610a4b8b828c016108a2565b9150509295985092959890939650565b60008060408385031215610a6e57600080fd5b6000610a7c858286016108b7565b9250506020610a8d8582860161088d565b9150509250929050565b610aa081610e22565b82525050565b610ab7610ab282610e22565b610efd565b82525050565b610ac681610e40565b82525050565b610add610ad882610e40565b610f0f565b82525050565b6000610aee82610dfb565b610af88185610e06565b9350610b08818560208601610e81565b80840191505092915050565b6000610b21600f83610e11565b9150610b2c82610f71565b602082019050919050565b6000610b44601a83610e11565b9150610b4f82610f9a565b602082019050919050565b6000610b67601583610e11565b9150610b7282610fc3565b602082019050919050565b6000610b8a601183610e11565b9150610b9582610fec565b602082019050919050565b6000610bad601883610e11565b9150610bb882611015565b602082019050919050565b610bcc81610e6a565b82525050565b610be3610bde82610e6a565b610f2b565b82525050565b610bf281610e74565b82525050565b6000610c048288610aa6565b601482019150610c148287610aa6565b601482019150610c248286610bd2565b602082019150610c348285610bd2565b602082019150610c448284610bd2565b6020820191508190509695505050505050565b6000610c638285610ae3565b9150610c6f8284610acc565b6020820191508190509392505050565b600060a082019050610c946000830188610a97565b610ca16020830187610a97565b610cae6040830186610bc3565b610cbb6060830185610bc3565b610cc86080830184610bc3565b9695505050505050565b6000604082019050610ce76000830185610a97565b610cf46020830184610bc3565b9392505050565b6000608082019050610d106000830187610abd565b610d1d6020830186610be9565b610d2a6040830185610abd565b610d376060830184610abd565b95945050505050565b60006020820190508181036000830152610d5981610b14565b9050919050565b60006020820190508181036000830152610d7981610b37565b9050919050565b60006020820190508181036000830152610d9981610b5a565b9050919050565b60006020820190508181036000830152610db981610b7d565b9050919050565b60006020820190508181036000830152610dd981610ba0565b9050919050565b6000602082019050610df56000830184610bc3565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610e2d82610e4a565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610e9f578082015181840152602081019050610e84565b83811115610eae576000848401525b50505050565b6000610ebf82610e6a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ef257610ef1610f35565b5b600182019050919050565b6000610f0882610f19565b9050919050565b6000819050919050565b6000610f2482610f64565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160601b9050919050565b7f5369676e6572206d69736d617463680000000000000000000000000000000000600082015250565b7f596f7520617265206e6f74207468652076616c696461746f722e000000000000600082015250565b7f546f6b656e206973206e6f7420616c6c6f7765642e0000000000000000000000600082015250565b7f5377617020616c726561647920646f6e65000000000000000000000000000000600082015250565b7f436861696e206964206973206e6f7420616c6c6f7765642e0000000000000000600082015250565b61104781610e22565b811461105257600080fd5b50565b61105e81610e34565b811461106957600080fd5b50565b61107581610e40565b811461108057600080fd5b50565b61108c81610e6a565b811461109757600080fd5b50565b6110a381610e74565b81146110ae57600080fd5b5056fea264697066735822122074b27902b30df83c84107120f2e1a0b949245cfac827521ba83141d6e0bcfff664736f6c63430008040033";

type BridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Bridge__factory extends ContractFactory {
  constructor(...args: BridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Bridge> {
    return super.deploy(overrides || {}) as Promise<Bridge>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Bridge {
    return super.attach(address) as Bridge;
  }
  override connect(signer: Signer): Bridge__factory {
    return super.connect(signer) as Bridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeInterface {
    return new utils.Interface(_abi) as BridgeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Bridge {
    return new Contract(address, _abi, signerOrProvider) as Bridge;
  }
}
